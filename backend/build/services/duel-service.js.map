{"version":3,"file":"duel-service.js","names":["storeDuel","playerId","DuelRepository","findOneUnfinishedOnePlayerOnly","unfinishedDuel","findOneUnfinished","possibleDuel","UserService","findById","player","setPlayerTwo","save","create","duel","i","DuelRoundScoreService","id","setPlayerOne","isSecondPlayerIn","duelId","findByIdUnfinished","setCategories","categories","DuelQuestionsService","findByDuelId","possibleQuestions","length","QuestionService","getQuestionsForDuel","questions","q","getQuestion","questionNumber","getQuestions","question","getPossibleAnswers","answersFull","answers","forEach","e","push","answer","difficulty","shuffle","checkAnswer","guessAnswerId","questionId","points","AnswerPointsRules","console","log","setPlayerOneResults","setPlayerTwoResults","AnsweredQuestionsService","playerTotalScore","correctAnswerId","roundNumber","findOneByDuelIdAndRound","duelScore","playerOneScore","playerTwoScore","getRoundResults","findByDuelIdAndRoundNumberWhereBothPlayers","results","finished","getDuelRoundScores","scores","isPlayerInDuel","array","currentIndex","randomIndex","Math","floor","random"],"sources":["../../src/services/duel-service.js"],"sourcesContent":["import DuelRepository from \"../repositories/duel-repository\";\nimport UserService from \"./user-service\";\nimport QuestionService from \"./question-service\";\nimport DuelQuestionsRepository from \"../repositories/duel-questions-repository\";\nimport AnswerPointsRules from \"../rules/answer-points-rules\";\nimport DuelRoundScoreService from \"./duel-round-score-service\";\nimport DuelQuestionsService from \"./duel-questions-service\";\nimport AnsweredQuestionRepository\n  from \"../repositories/answered-question-repository\";\nimport AnsweredQuestionsService from \"./answered-questions-service\";\nimport {compileTrust} from \"express/lib/utils\";\n\nconst storeDuel = async (playerId) => {\n  let unfinishedDuel = await DuelRepository.findOneUnfinishedOnePlayerOnly(\n      playerId);\n  // * user double clicked on start duel\n  if (unfinishedDuel) {\n    return unfinishedDuel;\n  }\n\n  let possibleDuel = await DuelRepository.findOneUnfinished();\n  let player = await UserService.findById(playerId);\n  // * duel with waiting player one\n  if (possibleDuel) {\n    possibleDuel.setPlayerTwo(player);\n    possibleDuel['playerTwoUsername'] = player['username'];\n    await possibleDuel.save();\n    return possibleDuel;\n  }\n  // * no waiting duel\n  let duel = await DuelRepository.create();\n  for (let i = 1; i <= 5; i++) {\n    await DuelRoundScoreService.create(i, duel.id);\n  }\n  duel.setPlayerOne(player);\n  duel['playerOneUsername'] = player['username'];\n  await duel.save();\n  return duel;\n};\n\nconst isSecondPlayerIn = async (duelId) => {\n  return await DuelRepository.findByIdUnfinished(duelId);\n};\n\nconst setCategories = async (duelId, categories) => {\n  // in case of double assigning nothing happens\n  let possibleQuestions = await DuelQuestionsService.findByDuelId(duelId);\n  if (possibleQuestions.length === 0) {\n    let questions = await QuestionService.getQuestionsForDuel(categories);\n    for (let q of questions) {\n      await DuelQuestionsService.create(duelId, q.id);\n    }\n  }\n};\n\nconst getQuestion = async (duelId, playerId) => {\n  let duel = await DuelRepository.findById(duelId);\n  try {\n    let questionNumber = playerId === duel['playerOneId']\n        ? duel['questionsNumPlayerOne'] - 1 : duel['questionsNumPlayerTwo'] - 1;\n    let questions = await duel.getQuestions();\n    let question = questions[questionNumber];\n    let answersFull = await question.getPossibleAnswers();\n    let answers = [];\n    answersFull.forEach(e => answers.push({id: e.id, answer: e.answer}))\n\n    return {\n      id: question.id,\n      difficulty: question['difficulty'],\n      question: question['question'],\n      answers: shuffle(answers)\n    }\n  } catch (e) {\n    return null;\n  }\n};\n\nconst checkAnswer = async (duelId, playerId, guessAnswerId, questionId) => {\n  let duel = await DuelRepository.findById(duelId);\n  let question = await QuestionService.findById(questionId);\n  let player = await UserService.findById(playerId);\n\n  let points = question['correct_answer_id'] === guessAnswerId\n      ? AnswerPointsRules.points(question['difficulty']) : 0;\n\n  duel['playerOneRoundScore'] += duel['playerOneId'] === playerId && points;\n  duel['playerTwoRoundScore'] += duel['playerTwoId'] === playerId && points;\n\n  player['totalScore'] += duel['playerOneId'] === playerId && points;\n  player['totalScore'] += duel['playerTwoId'] === playerId && points;\n  await player.save();\n\n  duel['questionsNumPlayerOne'] += duel['playerOneId'] === playerId && 1;\n  duel['questionsNumPlayerTwo'] += duel['playerTwoId'] === playerId && 1;\n  await duel.save();\n\n  // if question num % 5 = 0 setResults for player\n  if ((duel['questionsNumPlayerOne'] - 1) % 5 === 0 && playerId === duel['playerOneId']) {\n    console.log('setting res')\n    await setPlayerOneResults(duelId, playerId);\n  }\n  if ((duel['questionsNumPlayerTwo'] - 1) % 5 === 0 && playerId === duel['playerTwoId']) {\n    console.log('setting res player two')\n    await setPlayerTwoResults(duelId, playerId);\n  }\n\n  await AnsweredQuestionsService.create(duelId, playerId, questionId);\n\n  return {\n    points,\n    playerTotalScore: player['totalScore'],\n    correctAnswerId: question['correct_answer_id'],\n    guessAnswerId,\n    questionNumber: duel['playerOneId'] === playerId\n        ? duel['questionsNumPlayerOne'] : duel['questionsNumPlayerTwo']\n  };\n};\n\nconst setPlayerOneResults = async (duelId, playerId) => {\n  let duel = await DuelRepository.findById(duelId);\n  let roundNumber = playerId == duel['playerOneId'] ? duel['playerOneRound'] : duel['playerTwoRound'];\n\n  let duelScore = await DuelRoundScoreService.findOneByDuelIdAndRound(duelId,\n      roundNumber);\n\n  if (duelScore.playerOneScore < 0) {\n    duelScore.playerOneScore = duel['playerOneRoundScore'];\n    duel['playerOneRoundScore'] = 0;\n  }\n  await duelScore.save();\n  await duel.save();\n};\n\nconst setPlayerTwoResults = async (duelId, playerId) => {\n  let duel = await DuelRepository.findById(duelId);\n  console.log(playerId + ' is player two')\n  let roundNumber = playerId == duel['playerOneId'] ? duel['playerOneRound'] : duel['playerTwoRound'];\n\n  let duelScore = await DuelRoundScoreService.findOneByDuelIdAndRound(duelId,\n      roundNumber);\n\n  if (duelScore.playerTwoScore <= 0) {\n    duelScore.playerTwoScore = duel['playerTwoRoundScore'];\n    duel['playerTwoRoundScore'] = 0;\n  }\n\n  await duelScore.save();\n  await duel.save();\n};\n\nconst getRoundResults = async (duelId, playerId) => {\n  let duel = await DuelRepository.findById(duelId);\n  let roundNumber = playerId === duel['playerOneId'] ? duel['playerOneRound'] : duel['playerTwoRound'];\n\n  let results = await DuelRoundScoreService.findByDuelIdAndRoundNumberWhereBothPlayers(\n      duelId, roundNumber);\n\n  if (!results) {\n    return null;\n  } else {\n\n    if (results['playerOneScore'] > results['playerTwoScore']) {\n      duel['playerOneWins'] = duel['playerOneWins'] + 1;\n    } else if (results['playerOneScore'] < results['playerTwoScore']) {\n      duel['playerTwoWins'] = duel['playerTwoWins'] + 1;\n    }\n\n    if (duel['questionsNumPlayerOne'] === 26 && duel['questionsNumPlayerTwo']\n        === 26) {\n      duel.finished = true;\n    }\n    if (playerId === duel['playerOneId']) {\n      duel['playerOneRound'] = duel['playerOneRound'] + 1;\n    } else if (playerId === duel['playerTwoId']) {\n      duel['playerTwoRound'] = duel['playerTwoRound'] + 1;\n    }\n\n\n    await duel.save();\n\n    let scores = await duel.getDuelRoundScores(duelId);\n\n    return {\n      duel,\n      scores\n    };\n  }\n};\n\nconst findByIdUnfinished = async (duelId) => {\n  return await DuelRepository.findByIdUnfinished(duelId);\n};\n\nconst isPlayerInDuel = (playerId, duel) => {\n  if (duel['playerOneId'] === playerId) {\n    return true;\n  }\n  if (duel['playerTwoId'] === playerId) {\n    return true\n  }\n  return false;\n};\n\nconst shuffle = (array) => {\n  let currentIndex = array.length, randomIndex;\n  while (currentIndex != 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n  return array;\n};\n\nexport default {\n  storeDuel,\n  isSecondPlayerIn,\n  setCategories,\n  findByIdUnfinished,\n  getQuestion,\n  checkAnswer,\n  getRoundResults,\n  isPlayerInDuel\n};\n"],"mappings":"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"}