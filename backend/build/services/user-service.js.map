{"version":3,"file":"user-service.js","names":["create","user","password","bcrypt","hashSync","TokenGenerator","generateConfirmationToken","token","expiration","Math","round","Date","now","UserRepository","savedUser","Mailer","sendConfirmationMail","email","username","confirmAccount","confirmationToken","avatar","findByConfirmationToken","save","generateNewConfirmationToken","isUserNameTaken","findByUsername","isEmailUsed","findByEmail","login","userInDb","doesPasswordMatch","compareSync","forgottenPassword","userEmail","generatePasswordToken","sendPasswordResetMail","resetPassword","confirmPasswordChange","findById","id","findByPasswordToken","passwordToken","getUsersAvatar","userId"],"sources":["../../src/services/user-service.js"],"sourcesContent":["import UserRepository from \"../repositories/user-repository\";\nimport bcrypt from \"bcrypt\";\nimport TokenGenerator from \"../utils/password-token\";\nimport Mailer from \"../utils/mailer\";\n\nconst create = async (user) => {\n  user.password = bcrypt.hashSync(user['password'], 5);\n  let token = await TokenGenerator.generateConfirmationToken();\n  let expiration = Math.round(Date.now() / 1000 + 86400);\n  user['confirmationToken'] = token;\n  user['confirmationTokenExpiration'] = expiration;\n  let savedUser = await UserRepository.create(user);\n  Mailer.sendConfirmationMail(user.email, token, user.username);\n  return savedUser;\n};\n\nconst confirmAccount = async (confirmationToken, avatar) => {\n  let user = await UserRepository.findByConfirmationToken(confirmationToken);\n  user['active'] = true;\n  user['avatar'] = avatar;\n  user['confirmationToken'] = null;\n  user['confirmationTokenExpiration'] = null;\n  await user.save();\n  return user;\n};\n\nconst generateNewConfirmationToken = async (confirmationToken) => {\n  let user = await UserRepository.findByConfirmationToken(confirmationToken);\n  let token = await TokenGenerator.generateConfirmationToken();\n  let expiration = Math.round(Date.now() / 1000 + 86400);\n  user['confirmationToken'] = token;\n  user['confirmationTokenExpiration'] = expiration;\n  Mailer.sendConfirmationMail(user.email, token, user.username);\n  await user.save();\n  return token;\n};\n\nconst isUserNameTaken = async (username) => {\n  return await UserRepository.findByUsername(username) !== null;\n};\n\nconst isEmailUsed = async (email) => {\n  return await UserRepository.findByEmail(email) !== null;\n};\n\nconst login = async (user) => {\n  let userInDb = await UserRepository.findByUsername(user.username);\n  let doesPasswordMatch =  userInDb && bcrypt.compareSync(user['password'], userInDb['password']);\n  return doesPasswordMatch ? userInDb : null;\n};\n\nconst forgottenPassword = async (userEmail) => {\n  let user = await UserRepository.findByEmail(userEmail);\n  let token = await TokenGenerator.generatePasswordToken();\n  let expiration = Math.round(Date.now() / 1000 + 86400);\n  user['forgottenPasswordToken'] = token;\n  user['forgottenPasswordTokenExpiration'] = expiration\n  await user.save();\n  Mailer.sendPasswordResetMail(userEmail, token, user.username);\n};\n\nconst resetPassword = async (userEmail, password) => {\n  let user = await UserRepository.findByEmail(userEmail);\n  user['password'] = bcrypt.hashSync(password, 5);\n  user['forgottenPasswordToken'] = null;\n  user['forgottenPasswordTokenExpiration'] = null;\n  user['active'] = true;\n  Mailer.confirmPasswordChange(user['email'], user['username']);\n  await user.save();\n};\n\nconst findById = async (id) => {\n  return await UserRepository.findById(id);\n};\n\nconst findByEmail = async (email) => {\n  return await UserRepository.findByEmail(email);\n};\n\nconst findByPasswordToken = async (passwordToken) => {\n  return await UserRepository.findByPasswordToken(passwordToken);\n};\n\nconst findByConfirmationToken = async (confirmationToken) => {\n  return await UserRepository.findByConfirmationToken(confirmationToken);\n};\n\nconst getUsersAvatar = async (userId) => {\n  let user = await UserRepository.findById(userId);\n  return user['avatar'];\n};\n\nexport default {\n  create,\n  isEmailUsed,\n  isUserNameTaken,\n  login,\n  findById,\n  forgottenPassword,\n  resetPassword,\n  findByEmail,\n  findByConfirmationToken,\n  findByPasswordToken,\n  confirmAccount,\n  generateNewConfirmationToken,\n  getUsersAvatar\n};\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,MAAM;EAAA,mEAAG,iBAAOC,IAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YACbA,IAAI,CAACC,QAAL,GAAgBC,mBAAOC,QAAP,CAAgBH,IAAI,CAAC,UAAD,CAApB,EAAkC,CAAlC,CAAhB;YADa;YAAA,OAEKI,0BAAeC,yBAAf,EAFL;;UAAA;YAETC,KAFS;YAGTC,UAHS,GAGIC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAb,GAAoB,KAA/B,CAHJ;YAIbX,IAAI,CAAC,mBAAD,CAAJ,GAA4BM,KAA5B;YACAN,IAAI,CAAC,6BAAD,CAAJ,GAAsCO,UAAtC;YALa;YAAA,OAMSK,2BAAeb,MAAf,CAAsBC,IAAtB,CANT;;UAAA;YAMTa,SANS;;YAObC,mBAAOC,oBAAP,CAA4Bf,IAAI,CAACgB,KAAjC,EAAwCV,KAAxC,EAA+CN,IAAI,CAACiB,QAApD;;YAPa,iCAQNJ,SARM;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAANd,MAAM;IAAA;EAAA;AAAA,GAAZ;;AAWA,IAAMmB,cAAc;EAAA,oEAAG,kBAAOC,iBAAP,EAA0BC,MAA1B;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACJR,2BAAeS,uBAAf,CAAuCF,iBAAvC,CADI;;UAAA;YACjBnB,IADiB;YAErBA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;YACAA,IAAI,CAAC,QAAD,CAAJ,GAAiBoB,MAAjB;YACApB,IAAI,CAAC,mBAAD,CAAJ,GAA4B,IAA5B;YACAA,IAAI,CAAC,6BAAD,CAAJ,GAAsC,IAAtC;YALqB;YAAA,OAMfA,IAAI,CAACsB,IAAL,EANe;;UAAA;YAAA,kCAOdtB,IAPc;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAdkB,cAAc;IAAA;EAAA;AAAA,GAApB;;AAUA,IAAMK,4BAA4B;EAAA,oEAAG,kBAAOJ,iBAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OAClBP,2BAAeS,uBAAf,CAAuCF,iBAAvC,CADkB;;UAAA;YAC/BnB,IAD+B;YAAA;YAAA,OAEjBI,0BAAeC,yBAAf,EAFiB;;UAAA;YAE/BC,KAF+B;YAG/BC,UAH+B,GAGlBC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAb,GAAoB,KAA/B,CAHkB;YAInCX,IAAI,CAAC,mBAAD,CAAJ,GAA4BM,KAA5B;YACAN,IAAI,CAAC,6BAAD,CAAJ,GAAsCO,UAAtC;;YACAO,mBAAOC,oBAAP,CAA4Bf,IAAI,CAACgB,KAAjC,EAAwCV,KAAxC,EAA+CN,IAAI,CAACiB,QAApD;;YANmC;YAAA,OAO7BjB,IAAI,CAACsB,IAAL,EAP6B;;UAAA;YAAA,kCAQ5BhB,KAR4B;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAA5BiB,4BAA4B;IAAA;EAAA;AAAA,GAAlC;;AAWA,IAAMC,eAAe;EAAA,oEAAG,kBAAOP,QAAP;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACTL,2BAAea,cAAf,CAA8BR,QAA9B,CADS;;UAAA;YAAA;YAAA,mDACmC,IADnC;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAfO,eAAe;IAAA;EAAA;AAAA,GAArB;;AAIA,IAAME,WAAW;EAAA,oEAAG,kBAAOV,KAAP;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACLJ,2BAAee,WAAf,CAA2BX,KAA3B,CADK;;UAAA;YAAA;YAAA,mDACiC,IADjC;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAXU,WAAW;IAAA;EAAA;AAAA,GAAjB;;AAIA,IAAME,KAAK;EAAA,oEAAG,kBAAO5B,IAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACSY,2BAAea,cAAf,CAA8BzB,IAAI,CAACiB,QAAnC,CADT;;UAAA;YACRY,QADQ;YAERC,iBAFQ,GAEaD,QAAQ,IAAI3B,mBAAO6B,WAAP,CAAmB/B,IAAI,CAAC,UAAD,CAAvB,EAAqC6B,QAAQ,CAAC,UAAD,CAA7C,CAFzB;YAAA,kCAGLC,iBAAiB,GAAGD,QAAH,GAAc,IAH1B;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAALD,KAAK;IAAA;EAAA;AAAA,GAAX;;AAMA,IAAMI,iBAAiB;EAAA,oEAAG,kBAAOC,SAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACPrB,2BAAee,WAAf,CAA2BM,SAA3B,CADO;;UAAA;YACpBjC,IADoB;YAAA;YAAA,OAENI,0BAAe8B,qBAAf,EAFM;;UAAA;YAEpB5B,KAFoB;YAGpBC,UAHoB,GAGPC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAb,GAAoB,KAA/B,CAHO;YAIxBX,IAAI,CAAC,wBAAD,CAAJ,GAAiCM,KAAjC;YACAN,IAAI,CAAC,kCAAD,CAAJ,GAA2CO,UAA3C;YALwB;YAAA,OAMlBP,IAAI,CAACsB,IAAL,EANkB;;UAAA;YAOxBR,mBAAOqB,qBAAP,CAA6BF,SAA7B,EAAwC3B,KAAxC,EAA+CN,IAAI,CAACiB,QAApD;;UAPwB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAjBe,iBAAiB;IAAA;EAAA;AAAA,GAAvB;;AAUA,IAAMI,aAAa;EAAA,oEAAG,kBAAOH,SAAP,EAAkBhC,QAAlB;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACHW,2BAAee,WAAf,CAA2BM,SAA3B,CADG;;UAAA;YAChBjC,IADgB;YAEpBA,IAAI,CAAC,UAAD,CAAJ,GAAmBE,mBAAOC,QAAP,CAAgBF,QAAhB,EAA0B,CAA1B,CAAnB;YACAD,IAAI,CAAC,wBAAD,CAAJ,GAAiC,IAAjC;YACAA,IAAI,CAAC,kCAAD,CAAJ,GAA2C,IAA3C;YACAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;;YACAc,mBAAOuB,qBAAP,CAA6BrC,IAAI,CAAC,OAAD,CAAjC,EAA4CA,IAAI,CAAC,UAAD,CAAhD;;YANoB;YAAA,OAOdA,IAAI,CAACsB,IAAL,EAPc;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAbc,aAAa;IAAA;EAAA;AAAA,GAAnB;;AAUA,IAAME,QAAQ;EAAA,oEAAG,kBAAOC,EAAP;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACF3B,2BAAe0B,QAAf,CAAwBC,EAAxB,CADE;;UAAA;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAARD,QAAQ;IAAA;EAAA;AAAA,GAAd;;AAIA,IAAMX,WAAW;EAAA,qEAAG,mBAAOX,KAAP;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACLJ,2BAAee,WAAf,CAA2BX,KAA3B,CADK;;UAAA;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAXW,WAAW;IAAA;EAAA;AAAA,GAAjB;;AAIA,IAAMa,mBAAmB;EAAA,qEAAG,mBAAOC,aAAP;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACb7B,2BAAe4B,mBAAf,CAAmCC,aAAnC,CADa;;UAAA;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAnBD,mBAAmB;IAAA;EAAA;AAAA,GAAzB;;AAIA,IAAMnB,uBAAuB;EAAA,qEAAG,mBAAOF,iBAAP;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACjBP,2BAAeS,uBAAf,CAAuCF,iBAAvC,CADiB;;UAAA;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAvBE,uBAAuB;IAAA;EAAA;AAAA,GAA7B;;AAIA,IAAMqB,cAAc;EAAA,qEAAG,mBAAOC,MAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACJ/B,2BAAe0B,QAAf,CAAwBK,MAAxB,CADI;;UAAA;YACjB3C,IADiB;YAAA,mCAEdA,IAAI,CAAC,QAAD,CAFU;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAd0C,cAAc;IAAA;EAAA;AAAA,GAApB;;eAKe;EACb3C,MAAM,EAANA,MADa;EAEb2B,WAAW,EAAXA,WAFa;EAGbF,eAAe,EAAfA,eAHa;EAIbI,KAAK,EAALA,KAJa;EAKbU,QAAQ,EAARA,QALa;EAMbN,iBAAiB,EAAjBA,iBANa;EAObI,aAAa,EAAbA,aAPa;EAQbT,WAAW,EAAXA,WARa;EASbN,uBAAuB,EAAvBA,uBATa;EAUbmB,mBAAmB,EAAnBA,mBAVa;EAWbtB,cAAc,EAAdA,cAXa;EAYbK,4BAA4B,EAA5BA,4BAZa;EAabmB,cAAc,EAAdA;AAba,C"}